{"version":3,"sources":["styles/button.js","styles/globalStyles.js","styles/dashboard.js","styles/card.js","store/constants-actions.js","store/orderline/orderline.actions.js","components/ProductCard.js","config/index.js","api/products.js","components/Dashboard.js","store/products/products.actions.js","styles/header.js","styles/darkMode-switch.js","styles/rounded-switch.js","components/Header.js","styles/footer.js","components/Pagination.js","components/Footer.js","styles/cart.js","styles/cartItem.js","components/CartItem.js","styles/customerForm.js","components/CustomerForm.js","api/orders.js","components/Cart.js","store/order/order.actions.js","styles/successScreen.js","components/SuccessScreen.js","store/products/products.reducer.js","store/order/order.reducer.js","store/orderline/orderline.reducer.js","store/reducers.js","store/index.js","App.js","utils/themes-management.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","props","disabled","Theme","mode","colors","disable","text","borderColor","border","borderRadius","bgPrimary","disabledShadow","shadows","hover","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","darkMode","bgSecondary","icons","lightMode","rounded","cornered","Dashboard","div","CardComponent","Title","h2","SubTitle","h5","Description","CardFooter","Price","h3","SET_PRODUCTS","EMPTY_PRODUCTS","CREATE_ORDER","DELETE_ORDER","MODIFY_TOTAL","SET_FINISHED_ORDER","ADD_PRODUCT_TO_CART","DELETE_CART_ITEM","UPDATE_CART_PRODUCT","EMPTY_CART","deleteCartProduct","orderlineId","dispatch","type","actions","payload","updateCartProduct","update","ProductCard","productData","useDispatch","useState","runnedOut","setRunnedOut","cart","useSelector","state","orderlines","categories","setCategories","stock","remaining","setRemaining","useEffect","stringOfCategories","forEach","name","prepareCategoriesToDisplay","productId","quantity","find","productsId","checkForStock","id","className","description","style","display","flexWrap","alignItems","gap","onClick","orderline","productToUpdate","newCart","filter","subTotal","price","updatedCart","Number","API_PATH","fetchAllProducts","a","axios","get","pagination","page","rowsPerPage","products","filteredProducts","setFilteredProducts","slice","then","data","setAllProducts","catch","err","Helmet","map","product","index","Header","header","Actions","Divider","hr","DarkModeSwitch","Switch","width","height","padding","margin","transform","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","content","position","left","top","backgroundRepeat","backgroundPosition","RoundedSwitch","setDarkMode","setRounded","location","useLocation","changeMode","event","target","checked","to","src","alt","onChange","e","pathname","length","Badge","badgeContent","fontSize","FooTer","Pagination","productsQuantity","handleChangePage","handleChangeRowsPerPage","TablePagination","labelRowsPerPage","rowsPerPageOptions","component","count","onChangePage","onChangeRowsPerPage","Footer","Cart","Total","CardItem","SecondHalf","PriceWrapper","p","Quantity","Picker","select","CartItem","history","useHistory","handleOnDelete","push","handleOnChange","quantitySelected","value","Array","apply","n","i","marginLeft","marginRight","alignSelf","cursor","FormWrapper","Form","FormTitle","h4","FormRow","Label","label","Input","input","TextArea","textarea","Blank","CustomerForm","formRows","handleChange","Object","entries","required","htmlFor","rows","finishOrder","order","post","total","address","phone","email","setFormRows","reduce","acumulator","currentVlue","getStock","toFixed","onSubmit","preventDefault","userData","fullName","status","setFinishedOrder","finally","error","console","Congratulations","SuccessScreen","emptyOrderStore","substr","indexOf","firstName","costumerData","Date","now","initialState","persistConfig","key","storage","persistCombineReducers","action","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxReset","persistor","persistStore","useReduxSelector","App","setPage","setRowsPerPage","existProp","localStorage","savedMode","JSON","parse","getItem","userPrefersDark","matchMedia","matches","getPrefColorScheme","getInitialMode","getInitialBorder","body","document","getElementsByTagName","setItem","stringify","setProperty","newPage","parseInt","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b1e62f4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Theme } from \"./globalStyles\";\r\n\r\nexport const Button = styled.button`\r\n  padding: 5px;\r\n  padding-inline: 10px;\r\n  font-weight: bold;\r\n  color: ${(props) =>\r\n    props.disabled\r\n      ? Theme[props.mode].colors.disable\r\n      : Theme[props.mode].colors.text};\r\n  border: solid 2px;\r\n  border-color: ${(props) =>\r\n    props.disabled\r\n      ? Theme[props.mode].colors.disable\r\n      : Theme[props.mode].colors.borderColor};\r\n  border-radius: ${(props) => Theme[props.border].borderRadius};\r\n  background-color: ${(props) => Theme[props.mode].colors.bgPrimary};\r\n  box-shadow: ${(props) =>\r\n    props.disabled\r\n      ? Theme[props.mode].colors.disabledShadow\r\n      : Theme[props.mode].colors.shadows};\r\n  outline: none;\r\n  cursor: ${(props) => (props.disabled ? \"initial\" : \"pointer\")};\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.disabled\r\n        ? Theme[props.mode].colors.bgPrimary\r\n        : Theme[props.mode]?.colors.hover};\r\n  }\r\n`;\r\n","import { Button } from \"./button\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nconst device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`,\r\n};\r\n\r\nconst Theme = {\r\n  darkMode: {\r\n    colors: {\r\n      bgPrimary: \"#333333\",\r\n      bgSecondary: \"#292929\",\r\n      text: \"#e9e9e9\",\r\n      borderColor: \"#e9e9e9\",\r\n      shadows: \"2px 2px 1px #b6b6b6\",\r\n      disabledShadow: \"2px 2px 2px #000000\",\r\n      hover: \"#b2b2b2\",\r\n      disable: \"#000\",\r\n      icons: \"#000\",\r\n    },\r\n  },\r\n  lightMode: {\r\n    colors: {\r\n      bgPrimary: \"#ffffff\",\r\n      bgSecondary: \"#eeeeee\",\r\n      text: \"#333333\",\r\n      borderColor: \"#2d2d2d\",\r\n      shadows: \"2px 2px 2px #000000\",\r\n      disabledShadow: \"2px 2px 2px #b6b6b6\",\r\n      hover: \"#d3d3d3\",\r\n      disable: \"#d3d3d3\",\r\n      icons: \"#333333\",\r\n    },\r\n  },\r\n  rounded: {\r\n    borderRadius: \"12px\",\r\n  },\r\n  cornered: {\r\n    borderRadius: 0,\r\n  },\r\n};\r\n\r\nconst footerHg = \"100px\";\r\nconst navBarHg = \"100px\";\r\nconst pngShadow = \"drop-shadow(2px 2px 3px rgb(0, 0, 0))\";\r\n\r\nexport { Theme, Button, footerHg, navBarHg, pngShadow, device };\r\n","import styled from \"styled-components\";\r\nimport { device } from \"./globalStyles\";\r\n\r\nconst Dashboard = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  padding-inline: 30px;\r\n  padding-block: 30px;\r\n  @media ${device.mobileM} {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","import styled from \"styled-components\";\r\nimport { device, Theme } from \"./globalStyles\";\r\n\r\nconst CardComponent = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 500px;\r\n  height: 250px;\r\n  padding: 15px;\r\n  padding-right: 25px;\r\n  padding-left: 25px;\r\n  margin: 20px;\r\n  border: solid 3px;\r\n  background-color: ${(props) => Theme[props.mode]?.colors.bgSecondary};\r\n  border-radius: ${(props) => Theme[props.border].borderRadius};\r\n  border-color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  @media ${device.mobileL} {\r\n    transform: scale(0.9);\r\n  }\r\n  @media ${device.mobileM} {\r\n    transform: scale(0.8);\r\n  }\r\n  @media ${device.mobileS} {\r\n    transform: scale(0.7);\r\n  }\r\n`;\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n`;\r\nexport const SubTitle = styled.h5`\r\n  margin: 0;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Description = styled.div`\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  margin-bottom: 10px;\r\n  & p {\r\n    text-align: start;\r\n    font-weight: 500;\r\n    margin-top: 0;\r\n    padding-right: 5px;\r\n    line-height: 20px;\r\n  }\r\n`;\r\nconst CardFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst Price = styled.h3`\r\n  display: inline;\r\n  margin: 0;\r\n  &::before {\r\n    content: \"$\";\r\n  }\r\n  font-size: large;\r\n`;\r\n\r\nexport { CardComponent, Title, Description, CardFooter, Price };\r\n","//products\r\nexport const SET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const EMPTY_PRODUCTS = \"EMPTY_PRODUCTS\";\r\n\r\n//order\r\nexport const CREATE_ORDER = \"CREATE_ORDER\";\r\nexport const DELETE_ORDER = \"DELETE_ORDER\";\r\nexport const MODIFY_TOTAL = \"MODIFY_TOTAL\";\r\nexport const SET_FINISHED_ORDER = \"SET_FINISHED_ORDER\";\r\n\r\n//orderlines\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\nexport const DELETE_CART_ITEM = \"DELETE_CART_ITEM\";\r\nexport const UPDATE_CART_PRODUCT = \"UPDATE_CART_PRODUCT\";\r\nexport const EMPTY_CART = \"EMPTY_CART\";\r\n","import * as actions from \"../constants-actions\";\r\n\r\nconst setCreatedOrderline = (orderline) => (dispatch) => {\r\n  dispatch({\r\n    type: actions.ADD_PRODUCT_TO_CART,\r\n    payload: orderline,\r\n  });\r\n};\r\n\r\nconst deleteCartProduct = (orderlineId) => (dispatch) => {\r\n  dispatch({\r\n    type: actions.DELETE_CART_ITEM,\r\n    payload: orderlineId,\r\n  });\r\n};\r\n\r\nconst updateCartProduct = (update) => (dispatch) => {\r\n  dispatch({\r\n    type: actions.UPDATE_CART_PRODUCT,\r\n    payload: update,\r\n  });\r\n};\r\n\r\nconst emptyCart = () => (dispatch) => {\r\n  dispatch({\r\n    type: actions.EMPTY_CART,\r\n  });\r\n};\r\n\r\nexport { setCreatedOrderline, updateCartProduct, deleteCartProduct, emptyCart };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  CardComponent,\r\n  CardFooter,\r\n  Description,\r\n  Price,\r\n  SubTitle,\r\n  Title,\r\n} from \"../styles/card\";\r\nimport { Button } from \"../styles/globalStyles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setCreatedOrderline,\r\n  updateCartProduct,\r\n} from \"../store/orderline/orderline.actions\";\r\n\r\nconst ProductCard = (props) => {\r\n  const { productData, darkMode, rounded } = props;\r\n  const dispatch = useDispatch();\r\n  const [runnedOut, setRunnedOut] = useState(false);\r\n  const { cart } = useSelector((state) => state.orderlines);\r\n  const [categories, setCategories] = useState(\"\");\r\n  const [remaining, setRemaining] = useState(productData.stock);\r\n\r\n  useEffect(() => {\r\n    const prepareCategoriesToDisplay = () => {\r\n      let stringOfCategories = \"\";\r\n      productData.categories.forEach(({ name }) => {\r\n        stringOfCategories\r\n          ? (stringOfCategories += \", \" + name)\r\n          : (stringOfCategories += name);\r\n      });\r\n      setCategories(stringOfCategories);\r\n    };\r\n\r\n    prepareCategoriesToDisplay();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const checkForStock = (productId) => {\r\n    const { quantity } =\r\n      cart.find(({ productsId }) => productsId === productId) || {};\r\n    if (productData.stock === 0) {\r\n      setRunnedOut(true);\r\n    } else if (quantity && quantity >= productData.stock) {\r\n      setRunnedOut(true);\r\n    } else if (quantity) {\r\n      setRemaining(productData.stock - quantity);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkForStock(productData.id);\r\n    // eslint-disable-next-line\r\n  }, [cart]);\r\n\r\n  const addToCart = () => {\r\n    const productToUpdate = cart.find(\r\n      ({ productsId }) => productsId === productData.id\r\n    );\r\n    if (!productToUpdate) {\r\n      dispatch(\r\n        setCreatedOrderline({\r\n          ...productData,\r\n          id: null,\r\n          productsId: productData.id,\r\n          quantity: 1,\r\n          categories,\r\n          subTotal: Number(productData.price),\r\n        })\r\n      );\r\n    } else {\r\n      const newCart = cart.filter(\r\n        ({ productsId }) => productsId !== productData.id\r\n      );\r\n      const subTotal = productToUpdate.price * (productToUpdate.quantity + 1);\r\n      const updatedCart = [\r\n        ...newCart,\r\n        {\r\n          ...productToUpdate,\r\n          quantity: productToUpdate.quantity + 1,\r\n          subTotal,\r\n        },\r\n      ];\r\n      dispatch(updateCartProduct(updatedCart));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardComponent mode={darkMode} border={rounded}>\r\n      <Title>{productData?.name}</Title>\r\n      <SubTitle>{categories}</SubTitle>\r\n      <Description className=\"p\">\r\n        <p>{productData?.description}</p>\r\n      </Description>\r\n      <CardFooter>\r\n        <span\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            alignItems: \"center\",\r\n            gap: 10,\r\n          }}\r\n        >\r\n          <Button\r\n            disabled={runnedOut}\r\n            onClick={addToCart}\r\n            mode={darkMode}\r\n            border={rounded}\r\n          >\r\n            Add to cart\r\n          </Button>\r\n          <span>\r\n            {!runnedOut ? `${remaining} in stock` : \"No products in stock\"}\r\n          </span>\r\n        </span>\r\n        <Price>{productData?.price}</Price>\r\n      </CardFooter>\r\n    </CardComponent>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  productData: PropTypes.object,\r\n};\r\n\r\nexport default ProductCard;\r\n","export const API_PATH = \"https://fast-shopping-cart.herokuapp.com\";\n\n// export const API_PATH = \"http://localhost:4000\";\n","import axios from \"axios\";\r\nimport { API_PATH } from \"../config\";\r\n\r\nconst fetchAllProducts = async () => await axios.get(`${API_PATH}/products`);\r\n\r\nexport { fetchAllProducts };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Board from \"../styles/dashboard\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport { fetchAllProducts } from \"../api/products\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAllProducts } from \"../store/products/products.actions\";\r\n\r\nconst Dashboard = (props) => {\r\n  const { pagination, darkMode, rounded } = props;\r\n  const { page, rowsPerPage } = pagination;\r\n\r\n  const dispatch = useDispatch();\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredProducts(\r\n      products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    );\r\n  }, [products, page, rowsPerPage]);\r\n\r\n  useEffect(() => {\r\n    fetchAllProducts()\r\n      .then(({ data }) => {\r\n        dispatch(setAllProducts(data));\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Products List</title>\r\n      </Helmet>\r\n      <Board mode={darkMode} rounded={rounded}>\r\n        {filteredProducts.map((product, index) => {\r\n          return (\r\n            <ProductCard\r\n              productData={product}\r\n              key={index}\r\n              darkMode={darkMode}\r\n              rounded={rounded}\r\n            />\r\n          );\r\n        })}\r\n      </Board>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  props: PropTypes.shape({\r\n    pagination: PropTypes.shape({\r\n      page: PropTypes.number,\r\n      rowsPerPage: PropTypes.number,\r\n      handleChangePage: PropTypes.func,\r\n      handleChangeRowsPerPage: PropTypes.func,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Dashboard;\r\n","import * as actions from \"../constants-actions\";\r\n\r\nconst setAllProducts = (products) => (dispatch) => {\r\n  dispatch({\r\n    type: actions.SET_PRODUCTS,\r\n    payload: products,\r\n  });\r\n};\r\nconst emptyProducts = () => (dispatch) => {\r\n  dispatch({\r\n    type: actions.EMPTY_PRODUCTS,\r\n  });\r\n};\r\n\r\nexport { setAllProducts, emptyProducts };\r\n","import { device, navBarHg, Theme } from \"./globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  position: sticky;\r\n  justify-content: space-between;\r\n  padding-inline: 65px;\r\n  height: ${navBarHg};\r\n  align-items: center;\r\n  color: ${(props) => Theme[props.mode]?.colors.text};\r\n  @media ${device.tablet} {\r\n    justify-content: space-evenly;\r\n    padding: 10px;\r\n  }\r\n  @media ${device.mobileM} {\r\n    justify-content: center;\r\n    flex-direction: column-reverse;\r\n    padding: 10px;\r\n    height: 200px;\r\n  }\r\n`;\r\nexport const Actions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1em;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & img {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: 10px;\r\n  }\r\n  & h1 {\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\nexport const Divider = styled.hr`\r\n  background-color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  height: 3px;\r\n  margin-inline: 50px;\r\n  margin-block: 0;\r\n`;\r\n\r\nexport default Header;\r\n","import { styled, Switch } from \"@material-ui/core\";\r\nimport { Theme } from \"./globalStyles\";\r\n\r\nexport const DarkModeSwitch = styled(Switch)(({ mode }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: \"translateX(6px)\",\r\n    \"&.Mui-checked\": {\r\n      color: \"#fff\",\r\n      transform: \"translateX(22px)\",\r\n      \"& .MuiSwitch-thumb:before\": {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          \"#fff\"\r\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n      },\r\n      \"& + .MuiSwitch-track\": {\r\n        opacity: 1,\r\n        backgroundColor: \"#aab4be\",\r\n      },\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    backgroundColor: Theme[mode].colors.icons,\r\n    width: 32,\r\n    height: 32,\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      left: 0,\r\n      top: 0,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\",\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        \"#fff\"\r\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    opacity: 1,\r\n    backgroundColor: \"#aab4be\",\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n","import { styled, Switch } from \"@material-ui/core\";\r\nimport { Theme } from \"./globalStyles\";\r\n\r\nexport const RoundedSwitch = styled(Switch)(({ border, mode }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: \"translateX(6px)\",\r\n    \"&.Mui-checked\": {\r\n      color: \"#fff\",\r\n      transform: \"translateX(22px)\",\r\n      \"& .MuiSwitch-thumb:before\": {},\r\n      \"& + .MuiSwitch-track\": {\r\n        backgroundColor: \"#aab4be\",\r\n        opacity: 1,\r\n      },\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    backgroundColor: Theme[mode].colors.icons,\r\n    width: 32,\r\n    height: 32,\r\n    borderRadius: Theme[border].borderRadius,\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      left: 0,\r\n      top: 0,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    opacity: 1,\r\n    backgroundColor: \"#aab4be\",\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport HeaderComponent, { Title, Actions, Divider } from \"../styles/header\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { Badge } from \"@material-ui/core\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DarkModeSwitch } from \"../styles/darkMode-switch.js\";\r\nimport { RoundedSwitch } from \"../styles/rounded-switch\";\r\nimport { Theme } from \"../styles/globalStyles\";\r\n\r\nconst Header = (props) => {\r\n  const { darkMode, mode, setDarkMode, rounded, setRounded, border } =\r\n    props || {};\r\n  const location = useLocation();\r\n  const { cart } = useSelector((state) => state.orderlines);\r\n\r\n  const changeMode = (event, type) => {\r\n    if (type === \"colors\") {\r\n      setDarkMode(event.target.checked);\r\n    } else {\r\n      setRounded(event.target.checked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderComponent mode={mode}>\r\n        <Title>\r\n          <Link to=\"/\">\r\n            <img src=\"/logo512.png\" alt=\"Ups\" />\r\n          </Link>\r\n          <h1>Fast Shopping</h1>\r\n        </Title>\r\n        <Actions>\r\n          <form>\r\n            <DarkModeSwitch\r\n              mode={mode}\r\n              checked={darkMode}\r\n              onChange={(e) => changeMode(e, \"colors\")}\r\n            />\r\n            <RoundedSwitch\r\n              mode={mode}\r\n              border={border}\r\n              checked={rounded}\r\n              onChange={(e) => changeMode(e, \"corners\")}\r\n            />\r\n          </form>\r\n          {location.pathname === \"/\" && (\r\n            <Link to={cart.length ? \"/cart\" : \"/\"}>\r\n              <Badge badgeContent={cart.length} color=\"error\">\r\n                <ShoppingCartIcon\r\n                  style={{\r\n                    color: Theme[mode].colors.icons,\r\n                    fontSize: 40,\r\n                  }}\r\n                />\r\n              </Badge>\r\n            </Link>\r\n          )}\r\n        </Actions>\r\n      </HeaderComponent>\r\n      <Divider mode={mode} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport { footerHg, device, Theme } from \"./globalStyles\";\r\n\r\nexport const FooTer = styled.div`\r\n  display: flex;\r\n  margin: 0px;\r\n  width: 100%;\r\n  height: ${footerHg};\r\n  min-height: 50px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${(props) => Theme[props.mode]?.colors.text};\r\n  @media ${device.mobileL} {\r\n    justify-content: flex-start;\r\n  }\r\n  @media ${device.mobileS} {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TablePagination } from \"@material-ui/core\";\r\nimport { Theme } from \"../styles/globalStyles\";\r\n\r\nconst Pagination = ({ pagination, mode }) => {\r\n  const {\r\n    productsQuantity,\r\n    page,\r\n    rowsPerPage,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n  } = pagination;\r\n\r\n  return (\r\n    <>\r\n      <TablePagination\r\n        style={{ color: Theme[mode].colors.text }}\r\n        labelRowsPerPage=\"Products per page\"\r\n        rowsPerPageOptions={[20]}\r\n        component=\"div\"\r\n        count={productsQuantity}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  productsQuantity: PropTypes.number,\r\n  page: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  handleChangePage: PropTypes.func,\r\n  handleChangeRowsPerPage: PropTypes.func,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FooTer } from \"../styles/footer\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Footer = ({ pagination, darkMode, rounded }) => {\r\n  const { page, rowsPerPage, handleChangePage, handleChangeRowsPerPage } =\r\n    pagination;\r\n\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  return (\r\n    <FooTer mode={darkMode} border={rounded}>\r\n      <Pagination\r\n        mode={darkMode}\r\n        pagination={{\r\n          productsQuantity: products?.length,\r\n          handleChangePage,\r\n          handleChangeRowsPerPage,\r\n          page,\r\n          rowsPerPage,\r\n        }}\r\n      />\r\n    </FooTer>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  isMobile: PropTypes.bool,\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport { device, Theme } from \"./globalStyles\";\r\n\r\nconst Cart = styled.div`\r\n  padding-inline: 50px;\r\n  padding-top: 20px;\r\n  padding-bottom: 40px;\r\n  color: ${(props) => Theme[props.mode]?.colors.text};\r\n  @media ${device.mobileM} {\r\n    padding: 20px;\r\n  }\r\n`;\r\nexport const Title = styled.h2`\r\n  letter-spacing: 0.8px;\r\n`;\r\nexport const Total = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  & h2 {\r\n    margin: 0;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\nexport const Actions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & a {\r\n    color: #235e9e;\r\n    font-weight: 500;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport default Cart;\r\n","import styled from \"styled-components\";\r\nimport { device, Theme } from \"./globalStyles\";\r\n\r\nexport const CardItem = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-wrap: wrap;\r\n  padding: 15px;\r\n  padding-right: 25px;\r\n  padding-left: 25px;\r\n  margin: 20px;\r\n  margin-inline: 0;\r\n  border: solid 3px;\r\n  background-color: ${(props) => Theme[props.mode]?.colors.bgSecondary};\r\n  border-radius: ${(props) => Theme[props.border].borderRadius};\r\n  border-color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  & button {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  @media ${device.mobileM} {\r\n    padding: 10px;\r\n  }\r\n`;\r\nexport const Title = styled.div`\r\n  width: 70%;\r\n  padding-right: 10px;\r\n  flex-grow: 1;\r\n  & h3 {\r\n    font-weight: bold;\r\n    text-align: left;\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n  }\r\n  & h5 {\r\n    margin: 0;\r\n    text-align: left;\r\n    letter-spacing: 1px;\r\n  }\r\n  @media ${device.mobileL} {\r\n    padding-right: 0;\r\n  }\r\n`;\r\nexport const SecondHalf = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  min-width: fit-content;\r\n  width: 30%;\r\n  flex-grow: 1;\r\n`;\r\nexport const PriceWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  justify-content: space-evenly;\r\n  text-align: center;\r\n`;\r\nexport const Price = styled.p`\r\n  margin: ${(props) => props.margin};\r\n  font-size: ${(props) => props.fontSize || \"initial\"};\r\n  font-weight: 600;\r\n  text-align: center;\r\n  width: ${(props) => props.width || \"initial\"};\r\n  &::before {\r\n    content: \"$\";\r\n  }\r\n  @media ${device.mobileL} {\r\n    font-size: 14px;\r\n    width: fit-content;\r\n  }\r\n`;\r\nexport const Quantity = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  flex-grow: 2;\r\n  justify-content: space-evenly;\r\n  & span {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport const Picker = styled.select`\r\n  flex-grow: 1;\r\n  outline: none;\r\n  width: 60px;\r\n  border: solid 1px;\r\n  padding-block: 2px;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  color: ${(props) => Theme[props.mode]?.colors.text};\r\n  border-color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  border-radius: ${(props) => Theme[props.border].borderRadius};\r\n  background-color: ${(props) => Theme[props.mode]?.colors.bgPrimary};\r\n  cursor: pointer;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  CardItem,\r\n  Price,\r\n  Title,\r\n  Quantity,\r\n  Picker,\r\n  SecondHalf,\r\n  PriceWrapper,\r\n} from \"../styles/cartItem\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteForeverSharpIcon from \"@material-ui/icons/DeleteForeverSharp\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteCartProduct,\r\n  updateCartProduct,\r\n} from \"../store/orderline/orderline.actions\";\r\nimport { Theme } from \"../styles/globalStyles\";\r\n\r\nconst CartItem = (props = {}) => {\r\n  const { orderline, stock, mode, border } = props;\r\n  const { productsId, name, categories, price, quantity } = orderline || {};\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { cart } = useSelector((state) => state.orderlines);\r\n\r\n  const subTotal = Number(price) * quantity;\r\n\r\n  const handleOnDelete = () => {\r\n    if (cart.length === 1) {\r\n      history.push(\"/\");\r\n    }\r\n    dispatch(deleteCartProduct(productsId));\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    const quantitySelected = event.target.value;\r\n    const subTotal = Number(price) * quantitySelected;\r\n    const newCart = cart.filter(\r\n      ({ productsId }) => productsId !== orderline.productsId\r\n    );\r\n    const updatedCart = [\r\n      ...newCart,\r\n      {\r\n        ...orderline,\r\n        quantity: Number(quantitySelected),\r\n        subTotal,\r\n      },\r\n    ];\r\n    dispatch(updateCartProduct(updatedCart));\r\n  };\r\n\r\n  return (\r\n    <CardItem mode={mode} border={border}>\r\n      <Title>\r\n        <h3>{name}</h3>\r\n        <h5>{categories}</h5>\r\n      </Title>\r\n      <SecondHalf>\r\n        <PriceWrapper>\r\n          <span>Unit Price</span>\r\n          <Price margin={0}>{price}</Price>\r\n        </PriceWrapper>\r\n        <Quantity>\r\n          <span>Quantity</span>\r\n          <Picker\r\n            onChange={handleOnChange}\r\n            value={quantity}\r\n            mode={mode}\r\n            border={border}\r\n          >\r\n            {Array.apply(null, { length: stock }).map((n, i) => (\r\n              <option key={n} value={i + 1}>\r\n                {i + 1}\r\n              </option>\r\n            ))}\r\n          </Picker>\r\n        </Quantity>\r\n        <DeleteForeverSharpIcon\r\n          style={{\r\n            color: Theme[mode].colors.text,\r\n            marginLeft: 10,\r\n            marginRight: 15,\r\n            alignSelf: \"flex-end\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={handleOnDelete}\r\n        />\r\n        <Price margin=\"auto\" fontSize=\"21px\" width=\"80px\">\r\n          {subTotal}\r\n        </Price>\r\n      </SecondHalf>\r\n    </CardItem>\r\n  );\r\n};\r\n\r\nCartItem.propTypes = {\r\n  props: PropTypes.shape({\r\n    stock: PropTypes.number,\r\n    orderline: PropTypes.shape({\r\n      productsId: PropTypes.number,\r\n      name: PropTypes.string,\r\n      category: PropTypes.string,\r\n      price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      quantity: PropTypes.number,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default CartItem;\r\n","import styled from \"styled-components\";\r\nimport { device, Theme } from \"./globalStyles\";\r\n\r\nexport const FormWrapper = styled.div`\r\n  margin: 20px;\r\n  margin-inline: 0;\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  padding: 15px;\r\n  border: solid 3px;\r\n  border-color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  border-radius: ${(props) => Theme[props.border].borderRadius};\r\n  background-color: ${(props) => Theme[props.mode]?.colors.bgSecondary};\r\n  padding-right: 55px;\r\n  flex-grow: 1;\r\n  @media ${`(max-width: 500px)`} {\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const FormTitle = styled.h4`\r\n  font-weight: bold;\r\n  text-align: left;\r\n  margin-left: calc(25% + 25px);\r\n  @media ${`(max-width: 500px)`} {\r\n    margin: 0 0 10px 0;\r\n    text-align: center;\r\n  }\r\n`;\r\nexport const FormRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media ${`(max-width: 500px)`} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 25%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  text-align: right;\r\n  margin-right: 25px;\r\n  @media ${`(max-width: 500px)`} {\r\n    margin-right: 0;\r\n    text-align: left;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  outline: none;\r\n  border: solid 2px;\r\n  padding: 5px;\r\n  padding-left: 10px;\r\n  color: ${(props) => Theme[props.mode]?.colors.text};\r\n  border-color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  background-color: ${(props) => Theme[props.mode]?.colors.bgPrimary};\r\n  border-radius: ${(props) => Theme[props.border].borderRadius};\r\n  text-align: left;\r\n  line-height: 22px;\r\n  width: 75%;\r\n  @media ${`(max-width: 500px)`} {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const TextArea = styled.textarea`\r\n  outline: none;\r\n  padding: 10px;\r\n  color: ${(props) => Theme[props.mode]?.colors.text};\r\n  width: 75%;\r\n  min-height: 28px;\r\n  border: solid 2px black;\r\n  border-color: ${(props) => Theme[props.mode]?.colors.borderColor};\r\n  background-color: ${(props) => Theme[props.mode]?.colors.bgPrimary};\r\n  border-radius: ${(props) => Theme[props.border].borderRadius};\r\n  resize: vertical;\r\n  @media ${`(max-width: 500px)`} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Blank = styled.div`\r\n  flex-grow: 5;\r\n  @media ${device.tablet} {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Blank,\r\n  Form,\r\n  FormRow,\r\n  FormTitle,\r\n  FormWrapper,\r\n  Input,\r\n  Label,\r\n  TextArea,\r\n} from \"../styles/customerForm\";\r\n\r\nconst CustomerForm = (props) => {\r\n  const { formRows, handleChange, mode, border } = props;\r\n  return (\r\n    <FormWrapper>\r\n      <Form mode={mode} border={border}>\r\n        <FormTitle>Customer Information</FormTitle>\r\n        {Object.entries(formRows).map(([key, content], index) => {\r\n          const { label, type, value, required, name } = content;\r\n          return type === \"textarea\" ? (\r\n            <FormRow key={index}>\r\n              <Label htmlFor={name}>\r\n                {label}\r\n                {required && \"*\"}\r\n              </Label>\r\n              <TextArea\r\n                required={required}\r\n                mode={mode}\r\n                border={border}\r\n                rows=\"3\"\r\n                onChange={(event) => handleChange(event)}\r\n              />\r\n            </FormRow>\r\n          ) : (\r\n            <FormRow key={index}>\r\n              <Label>\r\n                {label}\r\n                {required && \"*\"}\r\n              </Label>\r\n              <Input\r\n                name={name}\r\n                required={required}\r\n                id={name}\r\n                mode={mode}\r\n                border={border}\r\n                value={value}\r\n                type={type}\r\n                onChange={(event) => handleChange(event)}\r\n              />\r\n            </FormRow>\r\n          );\r\n        })}\r\n      </Form>\r\n      <Blank></Blank>\r\n    </FormWrapper>\r\n  );\r\n};\r\nCustomerForm.propTypes = {\r\n  props: PropTypes.shape({\r\n    formRows: PropTypes.func,\r\n    handleChange: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default CustomerForm;\r\n","import axios from \"axios\";\r\nimport { API_PATH } from \"../config\";\r\n\r\nexport const finishOrder = async (order) =>\r\n  await axios.post(`${API_PATH}/orders`, order);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ShoppingCart, { Actions, Title, Total } from \"../styles/cart\";\r\nimport { Button } from \"../styles/globalStyles\";\r\nimport CartItem from \"./CartItem\";\r\nimport CustomerForm from \"./CustomerForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { modifyTotal, setCreatedOrder } from \"../store/order/order.actions\";\r\nimport { setFinishedOrder } from \"../store/order/order.actions\";\r\nimport { finishOrder } from \"../api/orders\";\r\nimport { emptyCart } from \"../store/orderline/orderline.actions\";\r\nimport { emptyProducts } from \"../store/products/products.actions\";\r\n\r\nconst Cart = ({ darkMode, rounded }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { cart } = useSelector((state) => state.orderlines);\r\n  const { total } = useSelector((state) => state.order);\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  const [formRows, setFormRows] = useState({\r\n    name: {\r\n      label: \"Full Name\",\r\n      type: \"text\",\r\n      value: \"\",\r\n      required: true,\r\n      name: \"name\",\r\n    },\r\n    id: { label: \"ID\", type: \"text\", value: \"\", required: true, name: \"id\" },\r\n    address: {\r\n      label: \"Address\",\r\n      type: \"textarea\",\r\n      value: \"\",\r\n      required: true,\r\n      name: \"address\",\r\n    },\r\n    phone: {\r\n      label: \"Phone Number\",\r\n      type: \"tel\",\r\n      value: \"\",\r\n      required: false,\r\n      name: \"phone\",\r\n    },\r\n    email: {\r\n      label: \"Email\",\r\n      type: \"email\",\r\n      value: \"\",\r\n      required: true,\r\n      name: \"email\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const total = cart.reduce(\r\n      (acumulator, currentVlue) => acumulator + currentVlue.subTotal,\r\n      0\r\n    );\r\n    dispatch(modifyTotal(total));\r\n    // eslint-disable-next-line\r\n  }, [cart]);\r\n\r\n  const getStock = (orderlineId) => {\r\n    return products.find(({ id }) => id === orderlineId)?.stock;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const userData = {\r\n      fullName: formRows.name.value,\r\n      id: formRows.id.value,\r\n      address: formRows.address.value,\r\n      phone: formRows.phone.value,\r\n      email: formRows.email.value,\r\n    };\r\n    const orderlines = [];\r\n    cart.map(({ productsId, quantity, subTotal }) => {\r\n      orderlines.push({ productsId, quantity, subTotal });\r\n    });\r\n    finishOrder({\r\n      total,\r\n      orderlines,\r\n    })\r\n      .then(({ status, data }) => {\r\n        if (status === 200) {\r\n          dispatch(setCreatedOrder(data));\r\n          dispatch(setFinishedOrder(userData));\r\n          dispatch(emptyCart());\r\n          dispatch(emptyProducts());\r\n        }\r\n      })\r\n      .finally(() => {\r\n        history.push(\"/thanks\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const input = event.target.name || \"address\";\r\n    setFormRows({\r\n      ...formRows,\r\n      [input]: {\r\n        ...formRows[input],\r\n        value: event.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ShoppingCart>\r\n      <Helmet>\r\n        <title> Shopping Cart</title>\r\n      </Helmet>\r\n      <Title>Shopping Cart</Title>\r\n      {cart.map((orderline, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <CartItem\r\n              mode={darkMode}\r\n              border={rounded}\r\n              orderline={orderline}\r\n              stock={getStock(orderline.productsId)}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      <Total>\r\n        <h2>\r\n          Total: <span>${total.toFixed(2)}</span>\r\n        </h2>\r\n      </Total>\r\n      <Title>Ready to order?</Title>\r\n      <form onSubmit={handleSubmit}>\r\n        <CustomerForm\r\n          formRows={formRows}\r\n          handleChange={handleChange}\r\n          mode={darkMode}\r\n          border={rounded}\r\n        />\r\n        <Actions>\r\n          <Button mode={darkMode} border={rounded} type=\"submit\">\r\n            Place Order\r\n          </Button>\r\n          <Link to=\"/\">Back to List</Link>\r\n        </Actions>\r\n      </form>\r\n    </ShoppingCart>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import * as actions from \"../constants-actions\";\r\n\r\nconst setCreatedOrder = (order) => (dispatch) => {\r\n  dispatch({\r\n    type: actions.CREATE_ORDER,\r\n    payload: order,\r\n  });\r\n};\r\nconst setFinishedOrder = (order) => (dispatch) => {\r\n  dispatch({\r\n    type: actions.SET_FINISHED_ORDER,\r\n    payload: order,\r\n  });\r\n};\r\n\r\nconst deleteOrder = () => (dispatch) => {\r\n  dispatch({\r\n    type: actions.DELETE_ORDER,\r\n  });\r\n};\r\n\r\nconst modifyTotal = (update) => (dispatch) => {\r\n  dispatch({\r\n    type: actions.MODIFY_TOTAL,\r\n    payload: update,\r\n  });\r\n};\r\n\r\nexport { setCreatedOrder, modifyTotal, deleteOrder, setFinishedOrder };\r\n","import styled from \"styled-components\";\r\n\r\nexport const Congratulations = styled.div`\r\n  padding-block: 50px;\r\n  padding-inline: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  & h1 {\r\n    font-size: 3em;\r\n  }\r\n  & h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 2em;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Button } from \"../styles/globalStyles\";\r\nimport { Congratulations } from \"../styles/successScreen\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteOrder } from \"../store/order/order.actions\";\r\n\r\nexport const SuccessScreen = ({ darkMode, rounded }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { order } = useSelector((state) => state.order);\r\n\r\n  const firstName = (fullName = \"Lianel Artiles Sotolongo\") =>\r\n    fullName.substr(0, fullName.indexOf(\" \"));\r\n\r\n  const emptyOrderStore = () => {\r\n    dispatch(deleteOrder());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Congratulations>\r\n      <Helmet>\r\n        <title>Thank you!</title>\r\n      </Helmet>\r\n      <h1>Thanks for your purchase</h1>\r\n      <h2>{`${firstName(\r\n        order.costumerData?.fullName\r\n      )}, we have created your order #${\r\n        order.id || Date.now()\r\n      }. Your items will be soon at your door.`}</h2>\r\n      <Button\r\n        mode={darkMode}\r\n        border={rounded}\r\n        onClick={() => emptyOrderStore()}\r\n      >\r\n        Start Again\r\n      </Button>\r\n    </Congratulations>\r\n  );\r\n};\r\n","import * as actions from \"../constants-actions\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n};\r\n\r\nexport default function productsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_PRODUCTS:\r\n      return {\r\n        products: action.payload,\r\n      };\r\n    case actions.EMPTY_PRODUCTS:\r\n      return {\r\n        products: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../constants-actions\";\r\n\r\nconst initialState = {\r\n  order: {\r\n    costumerData: {},\r\n  },\r\n  total: 0,\r\n};\r\n\r\nexport default function orderReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.CREATE_ORDER:\r\n      return {\r\n        ...state,\r\n        order: action.payload,\r\n      };\r\n    case actions.DELETE_ORDER:\r\n      return {\r\n        order: {\r\n          costumerData: {},\r\n        },\r\n        total: 0,\r\n      };\r\n    case actions.MODIFY_TOTAL:\r\n      return {\r\n        ...state,\r\n        total: action.payload,\r\n      };\r\n    case actions.SET_FINISHED_ORDER:\r\n      return {\r\n        ...state,\r\n        order: {\r\n          ...state.order,\r\n          costumerData: action.payload,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../constants-actions\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nexport default function orderlineReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.ADD_PRODUCT_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.payload],\r\n      };\r\n    case actions.DELETE_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((e) => e?.productsId !== action.payload),\r\n      };\r\n    case actions.UPDATE_CART_PRODUCT:\r\n      return {\r\n        ...state,\r\n        cart: action.payload,\r\n      };\r\n    case actions.EMPTY_CART:\r\n      return {\r\n        cart: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { persistCombineReducers } from \"redux-persist\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport ProductsReducer from \"./products/products.reducer\";\r\nimport OrderReducer from \"./order/order.reducer\";\r\nimport OrderlineReducer from \"./orderline/orderline.reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: storage,\r\n};\r\n\r\nexport default persistCombineReducers(persistConfig, {\r\n  products: ProductsReducer,\r\n  order: OrderReducer,\r\n  orderlines: OrderlineReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport {\r\n  useDispatch as useReduxDispatch,\r\n  useSelector as useReduxSelector,\r\n} from \"react-redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport reduxReset from \"redux-reset\";\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  composeEnhancers(applyMiddleware(...middleware), reduxReset())\r\n);\r\n\r\nconst persistor = persistStore(store);\r\nconst useSelector = useReduxSelector;\r\nconst useDispatch = () => useReduxDispatch();\r\n\r\nexport { useSelector, useDispatch, persistor, store };\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Cart from \"./components/Cart\";\nimport { SuccessScreen } from \"./components/SuccessScreen\";\nimport { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { getInitialBorder, getInitialMode } from \"./utils/themes-management\";\nimport { Theme } from \"./styles/globalStyles\";\n\nfunction App() {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n  const [darkMode, setDarkMode] = useState(getInitialMode());\n  const [rounded, setRounded] = useState(getInitialBorder());\n\n  const body = document.getElementsByTagName(\"body\")[0];\n  const mode = darkMode ? \"darkMode\" : \"lightMode\";\n  const border = rounded ? \"rounded\" : \"cornered\";\n\n  useEffect(() => {\n    localStorage.setItem(\"dark\", JSON.stringify(darkMode));\n    body.style.setProperty(\"--bg-color\", Theme[mode].colors.bgPrimary);\n    body.style.setProperty(\"--text-color\", Theme[mode].colors.text);\n  }, [darkMode]);\n\n  useEffect(() => {\n    localStorage.setItem(\"rounded\", JSON.stringify(rounded));\n  }, [rounded]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const pagination = {\n    page,\n    rowsPerPage,\n    handleChangePage,\n    handleChangeRowsPerPage,\n  };\n\n  return (\n    <div className=\"App\">\n      <PersistGate persistor={persistor}>\n        <Router>\n          <Route path=\"/\">\n            <Header\n              mode={mode}\n              darkMode={darkMode}\n              rounded={rounded}\n              border={border}\n              setDarkMode={setDarkMode}\n              setRounded={setRounded}\n            />\n          </Route>\n          <Route exact path=\"/\">\n            <Dashboard\n              pagination={pagination}\n              darkMode={mode}\n              rounded={border}\n            />\n          </Route>\n          <Route exact path=\"/cart\">\n            <Cart darkMode={mode} rounded={border} />\n          </Route>\n          <Route exact path=\"/thanks\">\n            <SuccessScreen darkMode={mode} rounded={border} />\n          </Route>\n          <Route exact path=\"/\">\n            <Footer pagination={pagination} darkMode={mode} rounded={border} />\n          </Route>\n        </Router>\n      </PersistGate>\n    </div>\n  );\n}\n\nexport default App;\n","export const getInitialMode = () => {\r\n  const existProp = \"dark\" in localStorage;\r\n  const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\r\n  const userPrefersDark = getPrefColorScheme();\r\n  // if mode was saved --> dark / light\r\n  if (existProp) {\r\n    return savedMode;\r\n    // if preferred color scheme is dark --> dark\r\n  } else if (userPrefersDark) {\r\n    return true;\r\n    // otherwise --> light\r\n  } else {\r\n    return false;\r\n  }\r\n  function getPrefColorScheme() {\r\n    if (!window.matchMedia) return;\r\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n  }\r\n};\r\nexport const getInitialBorder = () => {\r\n  const existProp = \"rounded\" in localStorage;\r\n  const savedMode = JSON.parse(localStorage.getItem(\"rounded\"));\r\n  if (existProp) {\r\n    return savedMode;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}